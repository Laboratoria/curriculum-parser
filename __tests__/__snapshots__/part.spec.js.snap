// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`part should parse empty part with meta data [pt_BR] 1`] = `
Object {
  "duration": 30,
  "format": "guided",
  "title": "Título",
  "type": "seminar",
}
`;

exports[`part should parse empty part with meta data 1`] = `
Object {
  "duration": 30,
  "format": "guided",
  "title": "El título de la parte",
  "type": "seminar",
}
`;

exports[`part should parse part with exercises 1`] = `
Object {
  "duration": 5,
  "exercises": Object {
    "01-print-primes": Object {
      "body": "<p>La programación imperativa tiene un nivel de abstracción bajo, lo que quiere
decir que se enfoca en describir, desde el punto de vista de la computadora,
cómo hacer lo que queremos. Nuestro código expresa de forma explícita el control
de flujo, usando bucles, declara variables para llevar la cuenta, ...</p>
<p>En el mundo real, en un lenguaje como JavaScript, vamos a encontrar
características de este paradigma, pero siempre en el contexto de otro paradigma
con un nivel de abtracción más alto y un mecanismo de reuso de código (cómo la
programación orientada a objetos o la prgramación funcional).</p>
<h2 id=\\"tarea\\">Tarea</h2>
<p>El <em>boilerplate</em> (la plantilla sobre la que hacer el ejercicio) contiene un
programa sin terminar. Este programa debe <strong>imprimir en la consola todos los
números primos menores que <code>20</code></strong>.</p>
<p>El <em>boilerplate</em> impementa sólo parte de la lógica. Por el momento imprime todos
los números enteros del <code>2</code> al <code>19</code>. Ahora tienes que añadir la lógica para
comprobar si un número es primo o no, y así sólo imprimir los primos.</p>
<h2 id=\\"requisitos\\">Requisitos</h2>
<ul>
<li>Debes implementar un bucle <code>for</code> anidado dentro del <code>for</code> ya existente.</li>
</ul>
<h2 id=\\"pistas\\">Pistas</h2>
<ul>
<li>Si un número es divisible por cualquier entero mayor que <code>1</code> que no sea el
número mismo, sabemos que NO es primo.</li>
<li>Dentro del bucle <code>for</code> principal, para ver si un número es primo, vamos a
tratar de demostrar que NO es primo, y si no podemos probar que no es primo,
entonces podemos asumir que sí es primo.</li>
<li>El operador <code>%</code> nos da el residuo de una división.</li>
<li>Una vez que hemos probado que un número no es primo ya no necesitamos
continuar dividiéndolo.</li>
</ul>
<h2 id=\\"recursos\\">Recursos</h2>
<ul>
<li><a href=\\"https://goo.gl/zn7cTu\\" target=\\"_blank\\">Arithmetic Operators: Remainder - MDN</a></li>
<li><a href=\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for\\" target=\\"_blank\\">Statements: for - MDN</a></li>
</ul>
",
      "env": "js",
      "files": Object {
        "Ym9pbGVycGxhdGU=": Object {
          "cHJpbnRQcmltZXMuanM=": "function printPrimes() {
  // Iteramos desde 2 (el primer número primo) hasta 19 (menor que 20)
  for (var i = 2; i < 20; i++) {
    var isPrime = true;

    // Ahora debemos iterar desde \`2\` hasta \`i / 2\` usando una variable \`j\` como
    // contador.
    //
    // Para cada \`j\` comprueba si la división \`i / j\` deja un residuo.
    //
    // NOTA: No necesitamos probar números más allá de \`i / 2\` porque el
    // resultado de la división \`i / j\` siempre sería una fracción entre 2 y 1,
    // siempre dejando residuo.

    // TU CÓDIGO AQUÍ

    if (isPrime) {
      console.log(i);
    }
  }
}

module.exports = printPrimes;
",
        },
        "c29sdXRpb24=": Object {
          "cHJpbnRQcmltZXMuanM=": "function printPrimes() {
  for (var i = 2; i < 20; i++) {
    var isPrime = true;
    for (var j = 2; j <= (i / 2); j++) {
      if (i % j === 0) {
        isPrime = false;
        break;
      }
    }
    if (isPrime) {
      console.log(i);
    }
  }
}

module.exports = printPrimes;
",
        },
        "dGVzdA==": Object {
          "cHJpbnRQcmltZXMuc3BlYy5qcw==": "'use strict';


const Assert = require('chai').assert;
const Sinon = require('sinon');
const Submission = require('../solution/printPrimes');


describe('printPrimes()', () => {

  const stub = Sinon.stub(console, 'log');
  Submission();
  stub.restore();

  it('debería exportar una función', () => {
    Assert.equal(typeof Submission, 'function');
  });

  it('debería invocar console.log 8 veces', () => {
    Assert.equal(stub.callCount, 8);
  });

  [[2], [3], [5], [7], [11], [13], [17], [19]].forEach((args, idx) => {
    it(\`invocación \${idx + 1} a console.log debería recibir \\"\${args[0]}\\" como único argumento\`, () => {
      Assert.deepEqual(args, stub.getCall(idx).args);
    });
  });

});
",
        },
      },
      "title": "Imprime los número enteros menores que 20",
    },
  },
  "format": "self-paced",
  "title": "Ejercicio imperativo",
  "type": "practice",
}
`;

exports[`part should parse quiz 1`] = `
Object {
  "duration": 30,
  "format": "self-paced",
  "questions": Array [
    Object {
      "answers": Array [
        "const last_name = 'Martinez';",
        "const score = 1;",
        "const cosita = \\"El retorno del Jedi\\";",
        "const undefined = true;",
        "const likesCoffee = false;",
        "const 2ndChild = 'Diana';",
      ],
      "description": "",
      "solution": Array [
        1,
        4,
      ],
      "title": "1) ¿Cuál de las siguientes opciones reflejan \\"buenos\\" nombres de variables (es decir, cumplen con las reglas y las sugerencias de buenas prácticas)?",
    },
    Object {
      "answers": Array [
        "Afectan el flujo del programa y se utilizan para hacer más entendible tu código",
        "No afectan el flujo del programa y se utilizan para hacer que el código corra
más rápido",
        "No afectan el flujo del programa y se utilizan para hacer más entendible tu
código",
        "Afectan el flujo del programa y se utilizan para hacer que el código corra
más rápido",
      ],
      "description": "<p>Esta es una descripción...</p><p>Blah blah blah</p><pre><code class=\\"language-js\\">const foo = 'bar';
</code></pre>",
      "solution": Array [
        2,
      ],
      "title": "2) Los comentarios en la programación",
    },
    Object {
      "answers": Array [
        "3 &gt; 3",
        "'hola' + ' mundo'",
        "true &amp;&amp; false",
        "\\"10\\" + 1",
      ],
      "description": "",
      "solution": Array [
        3,
      ],
      "title": "3) Un ejemplo de conversión automática es",
    },
    Object {
      "answers": Array [
        "No existe, son lo mismo",
        "No importa",
        "<code>undefined</code> no tiene valor y <code>null</code> es un string vacio",
        "<code>undefined</code> significa que no se ha <em>asignado</em> un valor, mientras que <code>null</code>
significa que hemos <em>asignado</em> el valor <code>null</code>",
      ],
      "description": "",
      "solution": Array [
        3,
      ],
      "title": "4) La diferencia entre undefined y null",
    },
    Object {
      "answers": Array [
        "Documentación de la Red de Desarrolladores de Mozilla (MDN)",
        "<a href=\\"http://www.w3schools.com\\" target=\\"_blank\\">www.w3schools.com</a>",
        "lineadecodigo.com",
        "stackoverflow.com",
      ],
      "description": "",
      "solution": Array [
        0,
        3,
      ],
      "title": "5) De la lista a continuación, elige las dos (2) fuentes más confiable para aprender por tu cuenta",
    },
    Object {
      "answers": Array [
        "\\"Hola Mundo\\"",
        "\\"Hola mundo\\"",
        "\\"Holamundo\\"",
        "'HolaMundo'",
      ],
      "description": "",
      "solution": Array [
        2,
      ],
      "title": "6) El resultado de 'Hola' + 'mundo' es",
    },
    Object {
      "answers": Array [
        "number",
        "string",
        "boolean",
        "undefined",
      ],
      "description": "",
      "solution": Array [
        1,
      ],
      "title": "7) ¿Qué tipo de dato es '123'?",
    },
    Object {
      "answers": Array [
        "number",
        "string",
        "boolean",
        "undefined",
      ],
      "description": "",
      "solution": Array [
        0,
      ],
      "title": "8) ¿Qué tipo de dato es Infinity?",
    },
    Object {
      "answers": Array [
        "true",
        "false",
      ],
      "description": "",
      "solution": Array [
        1,
      ],
      "title": "9) El resultado de 10 == 'diez' es",
    },
    Object {
      "answers": Array [
        "1",
        "0",
        "3.33",
        "10",
      ],
      "description": "",
      "solution": Array [
        0,
      ],
      "title": "10)  El resultado de 10 % 3 es",
    },
    Object {
      "answers": Array [
        "\\"Me \\"encanta\\" JavaScript\\"",
        "\\"Me \\\\encanta\\\\ JavaScript\\"",
        "\\"Me encanta JavaScript\\"",
        "\\"Me \\"encanta\\" JavaScript\\"",
      ],
      "description": "",
      "solution": Array [
        3,
      ],
      "title": "11) El resultado de 'Me \\"encanta\\" JavaScript' es",
    },
    Object {
      "answers": Array [
        "\\"boolean\\"",
        "\\"undefined\\"",
        "\\"number\\"",
        "\\"string\\"",
      ],
      "description": "",
      "solution": Array [
        2,
      ],
      "title": "12)  El resultado de typeof NaN es",
    },
    Object {
      "answers": Array [
        "4",
        "false",
        "15",
        "%",
      ],
      "description": "",
      "solution": Array [
        0,
      ],
      "title": "13)  El resultado de 4 % 15 es",
    },
    Object {
      "answers": Array [
        "NaN",
        "40",
        "diez4",
        "undefined",
      ],
      "description": "",
      "solution": Array [
        0,
      ],
      "title": "14) El resultado de 'diez' * 4 es",
    },
    Object {
      "answers": Array [
        "\\"501\\"",
        "51",
        "\\"50+1\\"",
        "50",
      ],
      "description": "",
      "solution": Array [
        0,
      ],
      "title": "15) El resultado de '50' + 1 es",
    },
    Object {
      "answers": Array [
        "true",
        "false",
        "undefined",
        "Null",
      ],
      "description": "",
      "solution": Array [
        0,
      ],
      "title": "16) El resultado de false == '' es",
    },
    Object {
      "answers": Array [
        "true",
        "false",
        "undefined",
        "Null",
      ],
      "description": "",
      "solution": Array [
        1,
      ],
      "title": "17) El resultado de '' === NaN es",
    },
    Object {
      "answers": Array [
        "\\" str\\"",
        "\\" string\\"",
        "\\"stri\\"",
        "\\" strin\\"",
      ],
      "description": "",
      "solution": Array [
        0,
      ],
      "title": "18) El resultado de 'a string'.slice(1, 5) es",
    },
    Object {
      "answers": Array [
        "\\"ng string is long\\"",
        "\\"long string is long\\"",
        "\\"\\"",
        "\\"My long string is long\\"",
      ],
      "description": "",
      "solution": Array [
        0,
      ],
      "title": "19) El resultado de 'My long string is long'.slice(5) es",
    },
    Object {
      "answers": Array [
        "\\"Quiero seguir aprendiendo!!!\\"",
        "\\"Quiero seguir aprendiendo!!\\"",
        "\\"Quiero seguir aprendiendo!\\"",
        "\\"iero seguir aprendiendo!!!\\"",
      ],
      "description": "",
      "solution": Array [
        2,
      ],
      "title": "20) El resultado de 'Quiero seguir aprendiendo!!!'.slice(0, -2) es",
    },
    Object {
      "answers": Array [
        "null",
        "undefined",
        "\\"\\"",
        "g",
      ],
      "description": "",
      "solution": Array [
        2,
      ],
      "title": "21) El resultado de 'cualquier string'.charAt(100) es",
    },
    Object {
      "answers": Array [
        "null",
        "3",
        "4",
        "5",
      ],
      "description": "",
      "solution": Array [
        2,
      ],
      "title": "22) El resultado de 'Hola Mundo'.indexOf(' ') es",
    },
    Object {
      "answers": Array [
        "null",
        "undefined",
        "0",
        "-1",
      ],
      "description": "",
      "solution": Array [
        3,
      ],
      "title": "23) El resultado de 'Hola Mundo'.indexOf('s') es",
    },
    Object {
      "answers": Array [
        "\\"AlphaBet\\"",
        "\\"ALPHABET\\"",
        "\\"alphabet\\"",
        "\\"Alphabet\\"",
      ],
      "description": "",
      "solution": Array [
        1,
      ],
      "title": "24) El resultado de 'alphabet'.toUpperCase() es",
    },
    Object {
      "answers": Array [
        "543",
        "\\"543\\"",
        "\\"Boolean\\"",
        "\\"number\\"",
      ],
      "description": "",
      "solution": Array [
        3,
      ],
      "title": "25) El resultado de typeof parseInt('543') es",
    },
  ],
  "title": "Quiz",
  "type": "quiz",
}
`;
